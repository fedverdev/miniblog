services:
  post-service:
    build:
      context: ./post-service
      dockerfile: Dockerfile
    container_name: post-service
    hostname: post-service
    restart: unless-stopped
    expose:
      - "8080"

  api-gateway:
    image: nginx:alpine
    container_name: api-gateway
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./api-gateway-service/public:/etc/nginx/public
      - ./api-gateway-service/private:/etc/nginx/private
      - ./api-gateway-service/conf.d:/etc/nginx/conf.d
      - ./api-gateway-service/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - post-service
      - auth-service

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    hostname: auth-service
    restart: unless-stopped
    environment:
      REDIS_HOST: auth-service-redis
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/auth_service_db
    expose:
      - "8080"
    depends_on:
      - redis
      - db

  redis:
    image: redis:7.2-alpine
    container_name: redis
    hostname: redis
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
    restart: unless-stopped

  db:
    image: postgres:17
    container_name: postgres
    restart: unless-stopped
    hostname: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db:/docker-entrypoint-initdb.d

volumes:
  redis_data:
  postgres_data: